//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWCFClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="runner", Namespace="http://schemas.datacontract.org/2004/07/RunningModel")]
    [System.SerializableAttribute()]
    public partial class runner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EFKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.EventRunnerTime[] EventRunnerTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.LastRace[] LastRacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.NextRace[] NextRacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ageGradeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string secondnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ukanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EFKey {
            get {
                return this.EFKeyField;
            }
            set {
                if ((this.EFKeyField.Equals(value) != true)) {
                    this.EFKeyField = value;
                    this.RaisePropertyChanged("EFKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.EventRunnerTime[] EventRunnerTimes {
            get {
                return this.EventRunnerTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.EventRunnerTimesField, value) != true)) {
                    this.EventRunnerTimesField = value;
                    this.RaisePropertyChanged("EventRunnerTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.LastRace[] LastRaces {
            get {
                return this.LastRacesField;
            }
            set {
                if ((object.ReferenceEquals(this.LastRacesField, value) != true)) {
                    this.LastRacesField = value;
                    this.RaisePropertyChanged("LastRaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.NextRace[] NextRaces {
            get {
                return this.NextRacesField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRacesField, value) != true)) {
                    this.NextRacesField = value;
                    this.RaisePropertyChanged("NextRaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ageGradeCode {
            get {
                return this.ageGradeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ageGradeCodeField, value) != true)) {
                    this.ageGradeCodeField = value;
                    this.RaisePropertyChanged("ageGradeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dob {
            get {
                return this.dobField;
            }
            set {
                if ((this.dobField.Equals(value) != true)) {
                    this.dobField = value;
                    this.RaisePropertyChanged("dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string secondname {
            get {
                return this.secondnameField;
            }
            set {
                if ((object.ReferenceEquals(this.secondnameField, value) != true)) {
                    this.secondnameField = value;
                    this.RaisePropertyChanged("secondname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ukan {
            get {
                return this.ukanField;
            }
            set {
                if ((object.ReferenceEquals(this.ukanField, value) != true)) {
                    this.ukanField = value;
                    this.RaisePropertyChanged("ukan");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventRunnerTime", Namespace="http://schemas.datacontract.org/2004/07/RunningModel")]
    [System.SerializableAttribute()]
    public partial class EventRunnerTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EFKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.Event EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.runner runnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Actual {
            get {
                return this.ActualField;
            }
            set {
                if ((this.ActualField.Equals(value) != true)) {
                    this.ActualField = value;
                    this.RaisePropertyChanged("Actual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EFKey {
            get {
                return this.EFKeyField;
            }
            set {
                if ((this.EFKeyField.Equals(value) != true)) {
                    this.EFKeyField = value;
                    this.RaisePropertyChanged("EFKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunnerId {
            get {
                return this.RunnerIdField;
            }
            set {
                if ((this.RunnerIdField.Equals(value) != true)) {
                    this.RunnerIdField = value;
                    this.RaisePropertyChanged("RunnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.runner runner {
            get {
                return this.runnerField;
            }
            set {
                if ((object.ReferenceEquals(this.runnerField, value) != true)) {
                    this.runnerField = value;
                    this.RaisePropertyChanged("runner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LastRace", Namespace="http://schemas.datacontract.org/2004/07/RunningModel")]
    [System.SerializableAttribute()]
    public partial class LastRace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EFKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.runner runnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EFKey {
            get {
                return this.EFKeyField;
            }
            set {
                if ((this.EFKeyField.Equals(value) != true)) {
                    this.EFKeyField = value;
                    this.RaisePropertyChanged("EFKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunnerId {
            get {
                return this.RunnerIdField;
            }
            set {
                if ((this.RunnerIdField.Equals(value) != true)) {
                    this.RunnerIdField = value;
                    this.RaisePropertyChanged("RunnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.runner runner {
            get {
                return this.runnerField;
            }
            set {
                if ((object.ReferenceEquals(this.runnerField, value) != true)) {
                    this.runnerField = value;
                    this.RaisePropertyChanged("runner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NextRace", Namespace="http://schemas.datacontract.org/2004/07/RunningModel")]
    [System.SerializableAttribute()]
    public partial class NextRace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EFKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.runner runnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EFKey {
            get {
                return this.EFKeyField;
            }
            set {
                if ((this.EFKeyField.Equals(value) != true)) {
                    this.EFKeyField = value;
                    this.RaisePropertyChanged("EFKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunnerId {
            get {
                return this.RunnerIdField;
            }
            set {
                if ((this.RunnerIdField.Equals(value) != true)) {
                    this.RunnerIdField = value;
                    this.RaisePropertyChanged("RunnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.runner runner {
            get {
                return this.runnerField;
            }
            set {
                if ((object.ReferenceEquals(this.runnerField, value) != true)) {
                    this.runnerField = value;
                    this.RaisePropertyChanged("runner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/RunningModel")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisciplineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistanceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EFKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWCFClient.ServiceReference1.EventRunnerTime[] EventRunnerTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discipline {
            get {
                return this.DisciplineField;
            }
            set {
                if ((object.ReferenceEquals(this.DisciplineField, value) != true)) {
                    this.DisciplineField = value;
                    this.RaisePropertyChanged("Discipline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistanceCode {
            get {
                return this.DistanceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceCodeField, value) != true)) {
                    this.DistanceCodeField = value;
                    this.RaisePropertyChanged("DistanceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EFKey {
            get {
                return this.EFKeyField;
            }
            set {
                if ((this.EFKeyField.Equals(value) != true)) {
                    this.EFKeyField = value;
                    this.RaisePropertyChanged("EFKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWCFClient.ServiceReference1.EventRunnerTime[] EventRunnerTimes {
            get {
                return this.EventRunnerTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.EventRunnerTimesField, value) != true)) {
                    this.EventRunnerTimesField = value;
                    this.RaisePropertyChanged("EventRunnerTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Venue {
            get {
                return this.VenueField;
            }
            set {
                if ((object.ReferenceEquals(this.VenueField, value) != true)) {
                    this.VenueField = value;
                    this.RaisePropertyChanged("Venue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRunner")]
    public interface IRunner {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/HelloWorld", ReplyAction="http://tempuri.org/IRunner/HelloWorldResponse")]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/HelloWorld", ReplyAction="http://tempuri.org/IRunner/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/GetAll", ReplyAction="http://tempuri.org/IRunner/GetAllResponse")]
        TestWCFClient.ServiceReference1.runner[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/GetAll", ReplyAction="http://tempuri.org/IRunner/GetAllResponse")]
        System.Threading.Tasks.Task<TestWCFClient.ServiceReference1.runner[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/GetById", ReplyAction="http://tempuri.org/IRunner/GetByIdResponse")]
        TestWCFClient.ServiceReference1.runner GetById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/GetById", ReplyAction="http://tempuri.org/IRunner/GetByIdResponse")]
        System.Threading.Tasks.Task<TestWCFClient.ServiceReference1.runner> GetByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/create", ReplyAction="http://tempuri.org/IRunner/createResponse")]
        bool create(TestWCFClient.ServiceReference1.runner runner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/create", ReplyAction="http://tempuri.org/IRunner/createResponse")]
        System.Threading.Tasks.Task<bool> createAsync(TestWCFClient.ServiceReference1.runner runner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/edit", ReplyAction="http://tempuri.org/IRunner/editResponse")]
        bool edit(TestWCFClient.ServiceReference1.runner runner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/edit", ReplyAction="http://tempuri.org/IRunner/editResponse")]
        System.Threading.Tasks.Task<bool> editAsync(TestWCFClient.ServiceReference1.runner runner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/delete", ReplyAction="http://tempuri.org/IRunner/deleteResponse")]
        bool delete(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRunner/delete", ReplyAction="http://tempuri.org/IRunner/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRunnerChannel : TestWCFClient.ServiceReference1.IRunner, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunnerClient : System.ServiceModel.ClientBase<TestWCFClient.ServiceReference1.IRunner>, TestWCFClient.ServiceReference1.IRunner {
        
        public RunnerClient() {
        }
        
        public RunnerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RunnerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunnerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunnerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public TestWCFClient.ServiceReference1.runner[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<TestWCFClient.ServiceReference1.runner[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public TestWCFClient.ServiceReference1.runner GetById(string id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<TestWCFClient.ServiceReference1.runner> GetByIdAsync(string id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public bool create(TestWCFClient.ServiceReference1.runner runner) {
            return base.Channel.create(runner);
        }
        
        public System.Threading.Tasks.Task<bool> createAsync(TestWCFClient.ServiceReference1.runner runner) {
            return base.Channel.createAsync(runner);
        }
        
        public bool edit(TestWCFClient.ServiceReference1.runner runner) {
            return base.Channel.edit(runner);
        }
        
        public System.Threading.Tasks.Task<bool> editAsync(TestWCFClient.ServiceReference1.runner runner) {
            return base.Channel.editAsync(runner);
        }
        
        public bool delete(string id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(string id) {
            return base.Channel.deleteAsync(id);
        }
    }
}
